"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toHaveErrorMessage = toHaveErrorMessage;
var _matches = require("../matches");
var _utils = require("./utils");
/* eslint-disable no-invalid-this */

/**
 * @param {TestInstance} testInstance
 * @param checkWith
 */
function toHaveErrorMessage(testInstance, checkWith) {
  (0, _utils.checkCliInstance)(testInstance, toHaveErrorMessage, this);
  const expectsErrorMessage = checkWith !== undefined;
  const errormessage = (0, _matches.getDefaultNormalizer)()(testInstance.stderrArr.map(obj => obj.contents).join('\n'));
  return {
    pass: expectsErrorMessage ? checkWith instanceof RegExp ? checkWith.test(errormessage) : this.equals(errormessage, checkWith) : Boolean(testInstance.stderrArr.length),
    message: () => {
      const to = this.isNot ? 'not to' : 'to';
      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveErrorMessage`, 'instance', ''), `Expected the instance ${to} have error message`, this.utils.printExpected(checkWith), 'Received', this.utils.printReceived(errormessage));
    }
  };
}