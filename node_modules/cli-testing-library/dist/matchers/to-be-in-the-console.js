"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toBeInTheConsole = toBeInTheConsole;
var _matches = require("../matches");
var _utils = require("./utils");
/* eslint-disable no-invalid-this */

function toBeInTheConsole(instance) {
  if (instance !== null || !this.isNot) {
    (0, _utils.checkCliInstance)(instance, toBeInTheConsole, this);
  }
  const errormessage = instance ? (0, _matches.getDefaultNormalizer)()(instance.stdoutArr.map(obj => obj.contents).join('\n')) : null;
  return {
    // Does not change based on `.not`, and as a result, we must confirm if it _actually_ is there
    pass: !!instance,
    message: () => {
      const to = this.isNot ? 'not to' : 'to';
      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeInTheConsole`, 'instance', ''), `Expected ${to} find the instance in the console`, '', 'Received', this.utils.printReceived(errormessage));
    }
  };
}