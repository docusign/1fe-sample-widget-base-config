"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.queryByError = exports.getByError = exports.findByError = void 0;
var _allUtils = require("./all-utils");
const queryByErrorBase = (instance, text, {
  exact = false,
  collapseWhitespace,
  trim,
  normalizer,
  stripAnsi
} = {}) => {
  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
  const matchNormalizer = (0, _allUtils.makeNormalizer)({
    stripAnsi,
    collapseWhitespace,
    trim,
    normalizer
  });
  const str = instance.stderrArr.map(obj => obj.contents).join('\n');
  if (matcher(str, instance, text, matchNormalizer)) return instance;else return null;
};
const getMissingError = (c, text) => `Unable to find an stdout line with the text: ${text}. This could be because the text is broken up by multiple lines. In this case, you can provide a function for your text matcher to make your matcher more flexible.`;
const [queryByErrorWithSuggestions, getByError, findByError] = (0, _allUtils.buildQueries)(queryByErrorBase, getMissingError);
exports.findByError = findByError;
exports.getByError = getByError;
exports.queryByError = queryByErrorWithSuggestions;