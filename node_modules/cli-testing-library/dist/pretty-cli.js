"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logCLI = void 0;
exports.prettyCLI = prettyCLI;
var _sliceAnsi = _interopRequireDefault(require("slice-ansi"));
var _getUserCodeFrame = require("./get-user-code-frame");
function prettyCLI(testInstance, maxLength) {
  if (typeof maxLength !== 'number') {
    maxLength = typeof process !== 'undefined' && process.env.DEBUG_PRINT_LIMIT || 7000;
  }
  if (maxLength === 0) {
    return '';
  }
  if (!('stdoutArr' in testInstance && 'stderrArr' in testInstance)) {
    throw new TypeError(`Expected an instance but got ${testInstance}`);
  }
  const outStr = testInstance.getStdallStr();

  // eslint-disable-next-line no-negated-condition
  return maxLength !== undefined && outStr.length > maxLength ? (0, _sliceAnsi.default)(outStr, 0, maxLength) : outStr;
}
const logCLI = (...args) => {
  const userCodeFrame = (0, _getUserCodeFrame.getUserCodeFrame)();
  if (userCodeFrame) {
    process.stdout.write(`${prettyCLI(...args)}\n\n${userCodeFrame}`);
  } else {
    process.stdout.write(prettyCLI(...args));
  }
};
exports.logCLI = logCLI;