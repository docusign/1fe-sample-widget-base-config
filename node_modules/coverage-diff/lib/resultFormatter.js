"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resultFormatter = void 0;
const markdown_table_1 = __importDefault(require("markdown-table"));
const resultFormatter = (files, total) => {
    const formattedFiles = formatFilesResults(files);
    const formattedTotal = formatTotal(total);
    return `${formattedFiles}${formattedTotal}`;
};
exports.resultFormatter = resultFormatter;
const formatTotal = (total) => {
    const table = [];
    const { lines, branches, functions, statements } = total.pcts;
    const lDelta = formatDelta(total.deltas.lines);
    const bDelta = formatDelta(total.deltas.branches);
    const fDelta = formatDelta(total.deltas.functions);
    const sDelta = formatDelta(total.deltas.statements);
    table.push(['Lines', 'Branches', 'Functions', 'Statements']);
    table.push([
        `${lines}%(${lDelta})`,
        `${branches}%(${bDelta})`,
        `${functions}%(${fDelta})`,
        `${statements}%(${sDelta})`
    ]);
    return '\n\nTotal:\n\n' + (0, markdown_table_1.default)(table);
};
const formatFilesResults = (files) => {
    let noChange = true;
    const table = [];
    const header = [
        'Ok',
        'File (âœ¨=New File)',
        'Lines',
        'Branches',
        'Functions',
        'Statements'
    ];
    table.push(header);
    Object.keys(files).forEach((file) => {
        const { deltas, pcts, decreased, belowThreshold, isNewFile } = files[file];
        const row = [
            decreased || belowThreshold ? 'ðŸ”´' : 'âœ…',
            `${isNewFile ? 'âœ¨ ' : ''}${file}`,
            `${pcts.lines}%<br>(${formatDelta(deltas.lines)})`,
            `${pcts.branches}%<br>(${formatDelta(deltas.branches)})`,
            `${pcts.functions}%<br>(${formatDelta(deltas.functions)})`,
            `${pcts.statements}%<br>(${formatDelta(deltas.statements)})`
        ];
        table.push(row);
        noChange = false;
    });
    return noChange ? 'Coverage values did not changeðŸ‘Œ.' : (0, markdown_table_1.default)(table);
};
const formatDelta = (num) => {
    return num >= 0 ? `+${num}%` : `${num}%`;
};
