"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.coverageDiffer = void 0;
const helpers_1 = require("./helpers");
const coverageDiffer = (base, head) => {
    const baseMap = (0, helpers_1.objectToMap)(base);
    const headMap = (0, helpers_1.objectToMap)(head);
    const diffMap = new Map();
    headMap.forEach((v, k) => {
        const fileSummary = baseMap.get(k);
        if (fileSummary) {
            diffMap.set(k, diffSummary(v, fileSummary));
        }
        else {
            diffMap.set(k, { ...v, isNewFile: true });
        }
    });
    return (0, helpers_1.mapToObject)(diffMap);
};
exports.coverageDiffer = coverageDiffer;
const diffSummary = (summaryA, summaryB) => {
    return {
        lines: diffInfo(summaryA.lines, summaryB.lines),
        statements: diffInfo(summaryA.statements, summaryB.statements),
        functions: diffInfo(summaryA.functions, summaryB.functions),
        branches: diffInfo(summaryA.branches, summaryB.branches),
        isNewFile: false
    };
};
const diffInfo = (infoA, infoB) => {
    return {
        total: infoA.total - infoB.total,
        covered: infoA.covered - infoB.covered,
        skipped: infoA.skipped - infoB.skipped,
        pct: Math.round((infoA.pct - infoB.pct) * 100) / 100
    };
};
