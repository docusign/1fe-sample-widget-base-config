#!/usr/bin/env node
import { z } from 'zod';
import { Configuration } from 'webpack';

declare const runtimeConfigSchema: z.ZodObject<{
    dependsOn: z.ZodOptional<z.ZodObject<{
        pinnedWidgets: z.ZodOptional<z.ZodArray<z.ZodObject<{
            widgetId: z.ZodString;
            version: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            version: string;
            widgetId: string;
        }, {
            version: string;
            widgetId: string;
        }>, "many">>;
        widgets: z.ZodOptional<z.ZodArray<z.ZodObject<{
            widgetId: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            widgetId: string;
        }, {
            widgetId: string;
        }>, "many">>;
    }, "strip", z.ZodTypeAny, {
        widgets?: {
            widgetId: string;
        }[] | undefined;
        pinnedWidgets?: {
            version: string;
            widgetId: string;
        }[] | undefined;
    }, {
        widgets?: {
            widgetId: string;
        }[] | undefined;
        pinnedWidgets?: {
            version: string;
            widgetId: string;
        }[] | undefined;
    }>>;
    preload: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        apiGet: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        apiGet: string;
    }, {
        apiGet: string;
    }>, z.ZodObject<{
        widget: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        widget: string;
    }, {
        widget: string;
    }>, z.ZodObject<{
        html: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        html: string;
    }, {
        html: string;
    }>]>, "many">>;
}, "strip", z.ZodTypeAny, {
    dependsOn?: {
        widgets?: {
            widgetId: string;
        }[] | undefined;
        pinnedWidgets?: {
            version: string;
            widgetId: string;
        }[] | undefined;
    } | undefined;
    preload?: ({
        apiGet: string;
    } | {
        widget: string;
    } | {
        html: string;
    })[] | undefined;
}, {
    dependsOn?: {
        widgets?: {
            widgetId: string;
        }[] | undefined;
        pinnedWidgets?: {
            version: string;
            widgetId: string;
        }[] | undefined;
    } | undefined;
    preload?: ({
        apiGet: string;
    } | {
        widget: string;
    } | {
        html: string;
    })[] | undefined;
}>;
declare const environmentSchema: z.ZodObject<{
    commonConfig: z.ZodObject<{
        cdn: z.ZodObject<{
            libraries: z.ZodObject<{
                basePrefix: z.ZodString;
                managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                    id: z.ZodString;
                    version: z.ZodString;
                    type: z.ZodLiteral<"installed">;
                }, "strip", z.ZodTypeAny, {
                    type: "installed";
                    id: string;
                    version: string;
                }, {
                    type: "installed";
                    id: string;
                    version: string;
                }>, z.ZodObject<{
                    id: z.ZodString;
                    version: z.ZodString;
                    type: z.ZodLiteral<"external">;
                    name: z.ZodString;
                    isPreloaded: z.ZodLiteral<true>;
                    path: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                }, {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                }>]>, "many">;
            }, "strip", z.ZodTypeAny, {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            }, {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            }>;
            widgets: z.ZodObject<{
                basePrefix: z.ZodString;
                releaseConfig: z.ZodArray<z.ZodObject<{
                    widgetId: z.ZodString;
                    type: z.ZodOptional<z.ZodString>;
                    plugin: z.ZodObject<{
                        enabled: z.ZodBoolean;
                        route: z.ZodString;
                        auth: z.ZodOptional<z.ZodObject<{
                            authenticationType: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            authenticationType: string;
                        }, {
                            authenticationType: string;
                        }>>;
                    }, "strip", z.ZodTypeAny, {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    }, {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    }>;
                    version: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }, {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }>, "many">;
            }, "strip", z.ZodTypeAny, {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            }, {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            }>;
        }, "strip", z.ZodTypeAny, {
            widgets: {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            };
            libraries: {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            };
        }, {
            widgets: {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            };
            libraries: {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            };
        }>;
        devtools: z.ZodOptional<z.ZodObject<{
            importMapOverrides: z.ZodOptional<z.ZodObject<{
                enableUI: z.ZodOptional<z.ZodBoolean>;
                allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            }, "strip", z.ZodTypeAny, {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            }, {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            importMapOverrides?: {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            } | undefined;
        }, {
            importMapOverrides?: {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            } | undefined;
        }>>;
        browserslistConfig: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        cdn: {
            widgets: {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            };
            libraries: {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            };
        };
        browserslistConfig: string[];
        devtools?: {
            importMapOverrides?: {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            } | undefined;
        } | undefined;
    }, {
        cdn: {
            widgets: {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            };
            libraries: {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            };
        };
        browserslistConfig: string[];
        devtools?: {
            importMapOverrides?: {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            } | undefined;
        } | undefined;
    }>;
    shellBaseUrl: z.ZodString;
    serverBaseUrl: z.ZodString;
}, "strip", z.ZodTypeAny, {
    commonConfig: {
        cdn: {
            widgets: {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            };
            libraries: {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            };
        };
        browserslistConfig: string[];
        devtools?: {
            importMapOverrides?: {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            } | undefined;
        } | undefined;
    };
    shellBaseUrl: string;
    serverBaseUrl: string;
}, {
    commonConfig: {
        cdn: {
            widgets: {
                basePrefix: string;
                releaseConfig: {
                    version: string;
                    widgetId: string;
                    plugin: {
                        enabled: boolean;
                        route: string;
                        auth?: {
                            authenticationType: string;
                        } | undefined;
                    };
                    type?: string | undefined;
                }[];
            };
            libraries: {
                basePrefix: string;
                managed: ({
                    type: "installed";
                    id: string;
                    version: string;
                } | {
                    path: string;
                    type: "external";
                    id: string;
                    version: string;
                    name: string;
                    isPreloaded: true;
                })[];
            };
        };
        browserslistConfig: string[];
        devtools?: {
            importMapOverrides?: {
                enableUI?: boolean | undefined;
                allowedSources?: string[] | undefined;
            } | undefined;
        } | undefined;
    };
    shellBaseUrl: string;
    serverBaseUrl: string;
}>;
declare const baseConfigObjectSchema: z.ZodObject<{
    environments: z.ZodRecord<z.ZodString, z.ZodObject<{
        commonConfig: z.ZodObject<{
            cdn: z.ZodObject<{
                libraries: z.ZodObject<{
                    basePrefix: z.ZodString;
                    managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        id: z.ZodString;
                        version: z.ZodString;
                        type: z.ZodLiteral<"installed">;
                    }, "strip", z.ZodTypeAny, {
                        type: "installed";
                        id: string;
                        version: string;
                    }, {
                        type: "installed";
                        id: string;
                        version: string;
                    }>, z.ZodObject<{
                        id: z.ZodString;
                        version: z.ZodString;
                        type: z.ZodLiteral<"external">;
                        name: z.ZodString;
                        isPreloaded: z.ZodLiteral<true>;
                        path: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    }, {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    }>]>, "many">;
                }, "strip", z.ZodTypeAny, {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                }, {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                }>;
                widgets: z.ZodObject<{
                    basePrefix: z.ZodString;
                    releaseConfig: z.ZodArray<z.ZodObject<{
                        widgetId: z.ZodString;
                        type: z.ZodOptional<z.ZodString>;
                        plugin: z.ZodObject<{
                            enabled: z.ZodBoolean;
                            route: z.ZodString;
                            auth: z.ZodOptional<z.ZodObject<{
                                authenticationType: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                authenticationType: string;
                            }, {
                                authenticationType: string;
                            }>>;
                        }, "strip", z.ZodTypeAny, {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        }, {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        }>;
                        version: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }, {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                }, {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                }>;
            }, "strip", z.ZodTypeAny, {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            }, {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            }>;
            devtools: z.ZodOptional<z.ZodObject<{
                importMapOverrides: z.ZodOptional<z.ZodObject<{
                    enableUI: z.ZodOptional<z.ZodBoolean>;
                    allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                }, {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            }, {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            }>>;
            browserslistConfig: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        }, {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        }>;
        shellBaseUrl: z.ZodString;
        serverBaseUrl: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>>;
    bathtubUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    environments: Record<string, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>;
    bathtubUrl?: string | undefined;
}, {
    environments: Record<string, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>;
    bathtubUrl?: string | undefined;
}>;
declare const baseConfigSchema: z.ZodUnion<[z.ZodObject<{
    environments: z.ZodRecord<z.ZodString, z.ZodObject<{
        commonConfig: z.ZodObject<{
            cdn: z.ZodObject<{
                libraries: z.ZodObject<{
                    basePrefix: z.ZodString;
                    managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        id: z.ZodString;
                        version: z.ZodString;
                        type: z.ZodLiteral<"installed">;
                    }, "strip", z.ZodTypeAny, {
                        type: "installed";
                        id: string;
                        version: string;
                    }, {
                        type: "installed";
                        id: string;
                        version: string;
                    }>, z.ZodObject<{
                        id: z.ZodString;
                        version: z.ZodString;
                        type: z.ZodLiteral<"external">;
                        name: z.ZodString;
                        isPreloaded: z.ZodLiteral<true>;
                        path: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    }, {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    }>]>, "many">;
                }, "strip", z.ZodTypeAny, {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                }, {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                }>;
                widgets: z.ZodObject<{
                    basePrefix: z.ZodString;
                    releaseConfig: z.ZodArray<z.ZodObject<{
                        widgetId: z.ZodString;
                        type: z.ZodOptional<z.ZodString>;
                        plugin: z.ZodObject<{
                            enabled: z.ZodBoolean;
                            route: z.ZodString;
                            auth: z.ZodOptional<z.ZodObject<{
                                authenticationType: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                authenticationType: string;
                            }, {
                                authenticationType: string;
                            }>>;
                        }, "strip", z.ZodTypeAny, {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        }, {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        }>;
                        version: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }, {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                }, {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                }>;
            }, "strip", z.ZodTypeAny, {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            }, {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            }>;
            devtools: z.ZodOptional<z.ZodObject<{
                importMapOverrides: z.ZodOptional<z.ZodObject<{
                    enableUI: z.ZodOptional<z.ZodBoolean>;
                    allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                }, {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            }, {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            }>>;
            browserslistConfig: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        }, {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        }>;
        shellBaseUrl: z.ZodString;
        serverBaseUrl: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>>;
    bathtubUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    environments: Record<string, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>;
    bathtubUrl?: string | undefined;
}, {
    environments: Record<string, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>;
    bathtubUrl?: string | undefined;
}>, z.ZodString, z.ZodFunction<z.ZodTuple<[], z.ZodUnknown>, z.ZodPromise<z.ZodObject<{
    environments: z.ZodRecord<z.ZodString, z.ZodObject<{
        commonConfig: z.ZodObject<{
            cdn: z.ZodObject<{
                libraries: z.ZodObject<{
                    basePrefix: z.ZodString;
                    managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                        id: z.ZodString;
                        version: z.ZodString;
                        type: z.ZodLiteral<"installed">;
                    }, "strip", z.ZodTypeAny, {
                        type: "installed";
                        id: string;
                        version: string;
                    }, {
                        type: "installed";
                        id: string;
                        version: string;
                    }>, z.ZodObject<{
                        id: z.ZodString;
                        version: z.ZodString;
                        type: z.ZodLiteral<"external">;
                        name: z.ZodString;
                        isPreloaded: z.ZodLiteral<true>;
                        path: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    }, {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    }>]>, "many">;
                }, "strip", z.ZodTypeAny, {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                }, {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                }>;
                widgets: z.ZodObject<{
                    basePrefix: z.ZodString;
                    releaseConfig: z.ZodArray<z.ZodObject<{
                        widgetId: z.ZodString;
                        type: z.ZodOptional<z.ZodString>;
                        plugin: z.ZodObject<{
                            enabled: z.ZodBoolean;
                            route: z.ZodString;
                            auth: z.ZodOptional<z.ZodObject<{
                                authenticationType: z.ZodString;
                            }, "strip", z.ZodTypeAny, {
                                authenticationType: string;
                            }, {
                                authenticationType: string;
                            }>>;
                        }, "strip", z.ZodTypeAny, {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        }, {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        }>;
                        version: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }, {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }>, "many">;
                }, "strip", z.ZodTypeAny, {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                }, {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                }>;
            }, "strip", z.ZodTypeAny, {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            }, {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            }>;
            devtools: z.ZodOptional<z.ZodObject<{
                importMapOverrides: z.ZodOptional<z.ZodObject<{
                    enableUI: z.ZodOptional<z.ZodBoolean>;
                    allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                }, "strip", z.ZodTypeAny, {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                }, {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                }>>;
            }, "strip", z.ZodTypeAny, {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            }, {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            }>>;
            browserslistConfig: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        }, {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        }>;
        shellBaseUrl: z.ZodString;
        serverBaseUrl: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>>;
    bathtubUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    environments: Record<string, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>;
    bathtubUrl?: string | undefined;
}, {
    environments: Record<string, {
        commonConfig: {
            cdn: {
                widgets: {
                    basePrefix: string;
                    releaseConfig: {
                        version: string;
                        widgetId: string;
                        plugin: {
                            enabled: boolean;
                            route: string;
                            auth?: {
                                authenticationType: string;
                            } | undefined;
                        };
                        type?: string | undefined;
                    }[];
                };
                libraries: {
                    basePrefix: string;
                    managed: ({
                        type: "installed";
                        id: string;
                        version: string;
                    } | {
                        path: string;
                        type: "external";
                        id: string;
                        version: string;
                        name: string;
                        isPreloaded: true;
                    })[];
                };
            };
            browserslistConfig: string[];
            devtools?: {
                importMapOverrides?: {
                    enableUI?: boolean | undefined;
                    allowedSources?: string[] | undefined;
                } | undefined;
            } | undefined;
        };
        shellBaseUrl: string;
        serverBaseUrl: string;
    }>;
    bathtubUrl?: string | undefined;
}>>>]>;
declare const onefeConfigurationSchema: z.ZodObject<{
    /**
     * Part of the configuration that should be externalized and distributed
     */
    baseConfig: z.ZodUnion<[z.ZodObject<{
        environments: z.ZodRecord<z.ZodString, z.ZodObject<{
            commonConfig: z.ZodObject<{
                cdn: z.ZodObject<{
                    libraries: z.ZodObject<{
                        basePrefix: z.ZodString;
                        managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                            id: z.ZodString;
                            version: z.ZodString;
                            type: z.ZodLiteral<"installed">;
                        }, "strip", z.ZodTypeAny, {
                            type: "installed";
                            id: string;
                            version: string;
                        }, {
                            type: "installed";
                            id: string;
                            version: string;
                        }>, z.ZodObject<{
                            id: z.ZodString;
                            version: z.ZodString;
                            type: z.ZodLiteral<"external">;
                            name: z.ZodString;
                            isPreloaded: z.ZodLiteral<true>;
                            path: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        }, {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        }>]>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    }, {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    }>;
                    widgets: z.ZodObject<{
                        basePrefix: z.ZodString;
                        releaseConfig: z.ZodArray<z.ZodObject<{
                            widgetId: z.ZodString;
                            type: z.ZodOptional<z.ZodString>;
                            plugin: z.ZodObject<{
                                enabled: z.ZodBoolean;
                                route: z.ZodString;
                                auth: z.ZodOptional<z.ZodObject<{
                                    authenticationType: z.ZodString;
                                }, "strip", z.ZodTypeAny, {
                                    authenticationType: string;
                                }, {
                                    authenticationType: string;
                                }>>;
                            }, "strip", z.ZodTypeAny, {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            }, {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            }>;
                            version: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }, {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    }, {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    }>;
                }, "strip", z.ZodTypeAny, {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                }, {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                }>;
                devtools: z.ZodOptional<z.ZodObject<{
                    importMapOverrides: z.ZodOptional<z.ZodObject<{
                        enableUI: z.ZodOptional<z.ZodBoolean>;
                        allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    }, {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    }>>;
                }, "strip", z.ZodTypeAny, {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                }, {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                }>>;
                browserslistConfig: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            }, {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            }>;
            shellBaseUrl: z.ZodString;
            serverBaseUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>>;
        bathtubUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    }, {
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    }>, z.ZodString, z.ZodFunction<z.ZodTuple<[], z.ZodUnknown>, z.ZodPromise<z.ZodObject<{
        environments: z.ZodRecord<z.ZodString, z.ZodObject<{
            commonConfig: z.ZodObject<{
                cdn: z.ZodObject<{
                    libraries: z.ZodObject<{
                        basePrefix: z.ZodString;
                        managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                            id: z.ZodString;
                            version: z.ZodString;
                            type: z.ZodLiteral<"installed">;
                        }, "strip", z.ZodTypeAny, {
                            type: "installed";
                            id: string;
                            version: string;
                        }, {
                            type: "installed";
                            id: string;
                            version: string;
                        }>, z.ZodObject<{
                            id: z.ZodString;
                            version: z.ZodString;
                            type: z.ZodLiteral<"external">;
                            name: z.ZodString;
                            isPreloaded: z.ZodLiteral<true>;
                            path: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        }, {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        }>]>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    }, {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    }>;
                    widgets: z.ZodObject<{
                        basePrefix: z.ZodString;
                        releaseConfig: z.ZodArray<z.ZodObject<{
                            widgetId: z.ZodString;
                            type: z.ZodOptional<z.ZodString>;
                            plugin: z.ZodObject<{
                                enabled: z.ZodBoolean;
                                route: z.ZodString;
                                auth: z.ZodOptional<z.ZodObject<{
                                    authenticationType: z.ZodString;
                                }, "strip", z.ZodTypeAny, {
                                    authenticationType: string;
                                }, {
                                    authenticationType: string;
                                }>>;
                            }, "strip", z.ZodTypeAny, {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            }, {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            }>;
                            version: z.ZodString;
                        }, "strip", z.ZodTypeAny, {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }, {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }>, "many">;
                    }, "strip", z.ZodTypeAny, {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    }, {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    }>;
                }, "strip", z.ZodTypeAny, {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                }, {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                }>;
                devtools: z.ZodOptional<z.ZodObject<{
                    importMapOverrides: z.ZodOptional<z.ZodObject<{
                        enableUI: z.ZodOptional<z.ZodBoolean>;
                        allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    }, "strip", z.ZodTypeAny, {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    }, {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    }>>;
                }, "strip", z.ZodTypeAny, {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                }, {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                }>>;
                browserslistConfig: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            }, {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            }>;
            shellBaseUrl: z.ZodString;
            serverBaseUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>>;
        bathtubUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    }, {
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    }>>>]>;
    /**
     * Runtime configuration for the application, per Environment.
     */
    runtimeConfig: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        dependsOn: z.ZodOptional<z.ZodObject<{
            pinnedWidgets: z.ZodOptional<z.ZodArray<z.ZodObject<{
                widgetId: z.ZodString;
                version: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                version: string;
                widgetId: string;
            }, {
                version: string;
                widgetId: string;
            }>, "many">>;
            widgets: z.ZodOptional<z.ZodArray<z.ZodObject<{
                widgetId: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                widgetId: string;
            }, {
                widgetId: string;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            widgets?: {
                widgetId: string;
            }[] | undefined;
            pinnedWidgets?: {
                version: string;
                widgetId: string;
            }[] | undefined;
        }, {
            widgets?: {
                widgetId: string;
            }[] | undefined;
            pinnedWidgets?: {
                version: string;
                widgetId: string;
            }[] | undefined;
        }>>;
        preload: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            apiGet: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            apiGet: string;
        }, {
            apiGet: string;
        }>, z.ZodObject<{
            widget: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            widget: string;
        }, {
            widget: string;
        }>, z.ZodObject<{
            html: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            html: string;
        }, {
            html: string;
        }>]>, "many">>;
    }, "strip", z.ZodTypeAny, {
        dependsOn?: {
            widgets?: {
                widgetId: string;
            }[] | undefined;
            pinnedWidgets?: {
                version: string;
                widgetId: string;
            }[] | undefined;
        } | undefined;
        preload?: ({
            apiGet: string;
        } | {
            widget: string;
        } | {
            html: string;
        })[] | undefined;
    }, {
        dependsOn?: {
            widgets?: {
                widgetId: string;
            }[] | undefined;
            pinnedWidgets?: {
                version: string;
                widgetId: string;
            }[] | undefined;
        } | undefined;
        preload?: ({
            apiGet: string;
        } | {
            widget: string;
        } | {
            html: string;
        })[] | undefined;
    }>>>>;
    /**
     * Webpack configs overrides per environment.
     */
    webpackConfigs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodType<Configuration, z.ZodTypeDef, Configuration>>>;
}, "strip", z.ZodTypeAny, {
    baseConfig: string | {
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    } | ((...args: unknown[]) => Promise<{
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    }>);
    runtimeConfig?: Record<string, {
        dependsOn?: {
            widgets?: {
                widgetId: string;
            }[] | undefined;
            pinnedWidgets?: {
                version: string;
                widgetId: string;
            }[] | undefined;
        } | undefined;
        preload?: ({
            apiGet: string;
        } | {
            widget: string;
        } | {
            html: string;
        })[] | undefined;
    }> | undefined;
    webpackConfigs?: Record<string, Configuration> | undefined;
}, {
    baseConfig: string | {
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    } | ((...args: unknown[]) => Promise<{
        environments: Record<string, {
            commonConfig: {
                cdn: {
                    widgets: {
                        basePrefix: string;
                        releaseConfig: {
                            version: string;
                            widgetId: string;
                            plugin: {
                                enabled: boolean;
                                route: string;
                                auth?: {
                                    authenticationType: string;
                                } | undefined;
                            };
                            type?: string | undefined;
                        }[];
                    };
                    libraries: {
                        basePrefix: string;
                        managed: ({
                            type: "installed";
                            id: string;
                            version: string;
                        } | {
                            path: string;
                            type: "external";
                            id: string;
                            version: string;
                            name: string;
                            isPreloaded: true;
                        })[];
                    };
                };
                browserslistConfig: string[];
                devtools?: {
                    importMapOverrides?: {
                        enableUI?: boolean | undefined;
                        allowedSources?: string[] | undefined;
                    } | undefined;
                } | undefined;
            };
            shellBaseUrl: string;
            serverBaseUrl: string;
        }>;
        bathtubUrl?: string | undefined;
    }>);
    runtimeConfig?: Record<string, {
        dependsOn?: {
            widgets?: {
                widgetId: string;
            }[] | undefined;
            pinnedWidgets?: {
                version: string;
                widgetId: string;
            }[] | undefined;
        } | undefined;
        preload?: ({
            apiGet: string;
        } | {
            widget: string;
        } | {
            html: string;
        })[] | undefined;
    }> | undefined;
    webpackConfigs?: Record<string, Configuration> | undefined;
}>;

type OneFeConfiguration = z.infer<typeof onefeConfigurationSchema>;
type OneFeBaseConfiguration = z.infer<typeof baseConfigSchema>;
type OneFeBaseConfigurationObject = z.infer<typeof baseConfigObjectSchema>;
type OneFeEnvironmentObject = z.infer<typeof environmentSchema>;
type OneFeRuntimeConfigObject = z.infer<typeof runtimeConfigSchema>;
type TypedOneFeBaseConfigurationObject<Environments extends string> = Omit<OneFeBaseConfigurationObject, 'environments'> & {
    environments: Record<Environments, OneFeEnvironmentObject>;
};
type TypedOneFeBaseConfig<Environments extends string> = string | TypedOneFeBaseConfigurationObject<Environments> | (() => Promise<TypedOneFeBaseConfigurationObject<Environments>>);
type TypedOneFeConfiguration<Environments extends string> = Omit<OneFeConfiguration, 'baseConfig' | 'runtimeConfig'> & {
    baseConfig: TypedOneFeBaseConfig<Environments>;
    runtimeConfig: Record<Environments, OneFeRuntimeConfigObject>;
};

declare const commonConfigSchema: z.ZodObject<{
    cdn: z.ZodObject<{
        libraries: z.ZodObject<{
            basePrefix: z.ZodString;
            managed: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                id: z.ZodString;
                version: z.ZodString;
                type: z.ZodLiteral<"installed">;
            }, "strip", z.ZodTypeAny, {
                type: "installed";
                id: string;
                version: string;
            }, {
                type: "installed";
                id: string;
                version: string;
            }>, z.ZodObject<{
                id: z.ZodString;
                version: z.ZodString;
                type: z.ZodLiteral<"external">;
                name: z.ZodString;
                isPreloaded: z.ZodLiteral<true>;
                path: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            }, {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            }>]>, "many">;
        }, "strip", z.ZodTypeAny, {
            basePrefix: string;
            managed: ({
                type: "installed";
                id: string;
                version: string;
            } | {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            })[];
        }, {
            basePrefix: string;
            managed: ({
                type: "installed";
                id: string;
                version: string;
            } | {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            })[];
        }>;
        widgets: z.ZodObject<{
            basePrefix: z.ZodString;
            releaseConfig: z.ZodArray<z.ZodObject<{
                widgetId: z.ZodString;
                type: z.ZodOptional<z.ZodString>;
                plugin: z.ZodObject<{
                    enabled: z.ZodBoolean;
                    route: z.ZodString;
                    auth: z.ZodOptional<z.ZodObject<{
                        authenticationType: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        authenticationType: string;
                    }, {
                        authenticationType: string;
                    }>>;
                }, "strip", z.ZodTypeAny, {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                }, {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                }>;
                version: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }, {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            basePrefix: string;
            releaseConfig: {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }[];
        }, {
            basePrefix: string;
            releaseConfig: {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }[];
        }>;
    }, "strip", z.ZodTypeAny, {
        widgets: {
            basePrefix: string;
            releaseConfig: {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }[];
        };
        libraries: {
            basePrefix: string;
            managed: ({
                type: "installed";
                id: string;
                version: string;
            } | {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            })[];
        };
    }, {
        widgets: {
            basePrefix: string;
            releaseConfig: {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }[];
        };
        libraries: {
            basePrefix: string;
            managed: ({
                type: "installed";
                id: string;
                version: string;
            } | {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            })[];
        };
    }>;
    devtools: z.ZodOptional<z.ZodObject<{
        importMapOverrides: z.ZodOptional<z.ZodObject<{
            enableUI: z.ZodOptional<z.ZodBoolean>;
            allowedSources: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            enableUI?: boolean | undefined;
            allowedSources?: string[] | undefined;
        }, {
            enableUI?: boolean | undefined;
            allowedSources?: string[] | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        importMapOverrides?: {
            enableUI?: boolean | undefined;
            allowedSources?: string[] | undefined;
        } | undefined;
    }, {
        importMapOverrides?: {
            enableUI?: boolean | undefined;
            allowedSources?: string[] | undefined;
        } | undefined;
    }>>;
    browserslistConfig: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    cdn: {
        widgets: {
            basePrefix: string;
            releaseConfig: {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }[];
        };
        libraries: {
            basePrefix: string;
            managed: ({
                type: "installed";
                id: string;
                version: string;
            } | {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            })[];
        };
    };
    browserslistConfig: string[];
    devtools?: {
        importMapOverrides?: {
            enableUI?: boolean | undefined;
            allowedSources?: string[] | undefined;
        } | undefined;
    } | undefined;
}, {
    cdn: {
        widgets: {
            basePrefix: string;
            releaseConfig: {
                version: string;
                widgetId: string;
                plugin: {
                    enabled: boolean;
                    route: string;
                    auth?: {
                        authenticationType: string;
                    } | undefined;
                };
                type?: string | undefined;
            }[];
        };
        libraries: {
            basePrefix: string;
            managed: ({
                type: "installed";
                id: string;
                version: string;
            } | {
                path: string;
                type: "external";
                id: string;
                version: string;
                name: string;
                isPreloaded: true;
            })[];
        };
    };
    browserslistConfig: string[];
    devtools?: {
        importMapOverrides?: {
            enableUI?: boolean | undefined;
            allowedSources?: string[] | undefined;
        } | undefined;
    } | undefined;
}>;

type OneFeCommonConfig = z.infer<typeof commonConfigSchema>;

export type { OneFeBaseConfiguration, OneFeBaseConfigurationObject, OneFeCommonConfig, OneFeConfiguration, OneFeEnvironmentObject, OneFeRuntimeConfigObject, TypedOneFeBaseConfig, TypedOneFeBaseConfigurationObject, TypedOneFeConfiguration };
